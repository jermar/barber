rbytes  EQU 32
rows    EQU 256

pbytes  EQU 16

g_plane EQU 0a000h

black   EQU 8
red     EQU 9
blue    EQU 12
white   EQU 15

rgb     EQU 0cch

	ORG 1000h

	LXI B, 0	; BC used for pattern generation, C used as a line counter

color_plus_1:		; the immediate 0 is later used as color
color	EQU color_plus_1 - 1

	LXI D, 0ffffh	; DE used for pattern generation and to draw black border

	; generate the pattern
	LXI SP, pattern + pbytes
	PUSH B
	PUSH B
	PUSH D
	PUSH D
	PUSH B
	PUSH B
	PUSH D
	PUSH D

	LXI SP, g_plane + (rows * rbytes)

	MVI A, black
	OUT rgb

line:
	; right border
	PUSH D
	PUSH D
	PUSH D
	PUSH D

	LXI H, pattern
	MOV B, A

	CMP A ; clear CY
pole:
	; save CY (wrap-around pattern bit)
	SBB A
	STA cy

	; pick color
	LXI D, color
	LDAX D
	ADI 32
	STAX D

	; convert S to either red or blue
	RLC
	MVI A, 8
	ACI 3
	ANI 0fdh

	OUT rgb

	; restore CY (wrap-around pattern bit)
	LDA cy
	ADD A

	; pick & rotate the pattern
	MOV D, M
	MOV A, D
	RAL
	MOV M, A
	INX H
	MOV E, M
	MOV A, E
	RAL
	MOV M, A
	INX H

	PUSH D
	INX SP		; cannot use POP PSW to preserve CY
	INX SP

	; print the inverted pattern in white
	MVI A, white
	OUT rgb
	MOV A, E
	CMA
	MOV E, A
	MOV A, D
	CMA
	MOV D, A
	PUSH D

	DCR B
	JNZ pole

	; rotate the pattern wrap-around bit
	MVI L, pattern & 0ffh
	MOV A, M 
	ADC B 		; B is 0, only adding CY
	MOV M, A

	; rotate color by 1/4 in 32 lines (one color segment)
	MVI L, color & 0ffh
	MOV A, M
	SUI 2
	MOV M, A
	
	; left border
	MVI A, black
	OUT rgb
	LXI D, 0ffffh
	PUSH D
	PUSH D
	PUSH D
	PUSH D

	DCR C
	JNZ line

spin:
	MVI B, 4
loop:
	DCR C
	JNZ loop
	DCR B
	JNZ loop 

	INR A
	OUT 0c0h
	JMP spin

pattern:
	DS 16

cy:
	DS 1
